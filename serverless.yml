useDotenv: true

service: serverless-slack-bot
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  stage: ${env:STAGE, opt:stage, 'production'}
  environment:
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
    SLACK_BOT_COMMAND: ${self:custom.overrides.${self:provider.stage}.SLACK_BOT_COMMAND}
    STAGE: ${self:provider.stage}
    EXCEL_DRIVE_ITEM_ID: ${env:EXCEL_DRIVE_ITEM_ID}
    EXCEL_WORKSHEET_ID: ${env:EXCEL_WORKSHEET_ID}
    TENANT_ID: ${env:TENANT_ID}
    CLIENT_ID: ${env:CLIENT_ID}
    CLIENT_SECRET: ${env:CLIENT_SECRET}
    RANGE: ${env:RANGE}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:custom.workerLambdaName}

custom:
  overrides:
    dev1:
      SLACK_BOT_COMMAND: "/dev1"
      STAGE: "dev1"
    dev2:
      SLACK_BOT_COMMAND: "/dev2"
      STAGE: "dev2"
    production:
      SLACK_BOT_COMMAND: "/bonus"
      STAGE: "production"
  workerLambdaName: ${self:service}-${self:provider.stage}-worker

functions:
  slackEventHandler:
    handler: src/functions/slackEventHandler.handleSlackEvent
    events:
      - http:
          path: slack/events
          method: post
    environment:
      WORKER_LAMBDA_NAME: ${self:custom.workerLambdaName}

  worker:
    handler: src/functions/worker.handleWorkerEvent
    timeout: 30

plugins:
  - serverless-esbuild
  - serverless-offline
